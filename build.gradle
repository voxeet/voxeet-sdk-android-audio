buildscript {
    apply from: gradle.dolbyio.files.modules

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath dolbyio.android.gradlePlugin
        classpath dolbyio.gradle.versions.plugin
        classpath dolbyio.kotlin.gradlePlugin
        classpath dolbyio.license.gradlePlugin
        classpath dolbyio.sonarqube.gradlePlugin
        classpath dolbyio.version.catalog.update.plugin
        classpath dolbyio.dokka.gradlePlugin
    }
}

plugins {
    alias(dolbyio.plugins.dokka)
    alias(dolbyio.plugins.publish.nexus)
}

apply from: gradle.dolbyio.files.dependencyUpdates

ext {
    ndkVersion = "21.4.7075529"
    groupId = "io.dolby"
    publishWithSources = true
    pom = [
        description: "Dolby.io Communications APIs library module",
        inceptionYear: "${new Date().format("YYYY")}",
        url: "https://github.com/voxeet/voxeet-sdk-android-audio",
        license: [
            name: 'Apache License',
            url: 'https://github.com/voxeet/voxeet-sdk-android-audio/blob/main/LICENSE'
        ],
        developer: [
            id: 'dolbyio',
            name: 'Dolby.io',
            email: 'support@dolby.io'
        ],
        scm: [
            connection: 'scm:git:github.com/voxeet/voxeet-sdk-android-audio.git',
            developerConnection: 'scm:git:ssh://github.com/voxeet/voxeet-sdk-android-audio.git',
            url: 'https://github.com/voxeet/voxeet-sdk-android-audio/tree/main'
        ]
    ]
}

group = ext.groupId

nexusPublishing {
    repositories {
        sonatype {
            // override default urls as default are oss.sonatype.org
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//we can install every module right away
task installAll {
    dependsOn(':audio:clean')
    dependsOn(':audio:assembleRelease')
    dependsOn(':audio:publishToMavenLocal')
}

subprojects {
    task allDeps(type: DependencyReportTask) {}

    if (isSourcesModule(it)) {
        apply from: gradle.dolbyio.files.moduleSetup
    }
}

apply from: "./audio.gradle"
